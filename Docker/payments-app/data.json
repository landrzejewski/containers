{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Docker Scout",
          "informationUri": "https://docker.com/products/docker-scout",
          "name": "docker scout",
          "rules": [
            {
              "id": "CVE-2023-34053",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-34053"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-34053",
              "help": {
                "text": "In Spring Framework versions 6.0.0 - 6.0.13, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable when all of the following are true:\n\n  *  the application uses Spring MVC or Spring WebFlux\n  *  io.micrometer:micrometer-core is on the classpath\n  *  an ObservationRegistry is configured in the application to record observations\n\n\nTypically, Spring Boot applications need the org.springframework.boot:spring-boot-actuator dependency to meet all conditions.\n",
                "markdown": "> In Spring Framework versions 6.0.0 - 6.0.13, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable when all of the following are true:\n\n  *  the application uses Spring MVC or Spring WebFlux\n  *  io.micrometer:micrometer-core is on the classpath\n  *  an ObservationRegistry is configured in the application to record observations\n\n\nTypically, Spring Boot applications need the org.springframework.boot:spring-boot-actuator dependency to meet all conditions.\n\n|                |                                                    |\n|----------------|----------------------------------------------------|\n| Package        | pkg:maven/org.springframework/spring-webmvc@6.0.12 |\n| Affected range | >=6.0.0,<6.0.14                                    |\n| Fixed version  | 6.0.14                                             |\n| CVSS Score     |                                                5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L       |\n"
              },
              "properties": {
                "affected_version": ">=6.0.0,<6.0.14",
                "cvssV3": 5.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "6.0.14",
                "purls": [
                  "pkg:maven/org.springframework/spring-webmvc@6.0.12"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-34055",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-34055"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-34055",
              "help": {
                "text": "In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable when all of the following are true:\n\n  *  the application uses Spring MVC or Spring WebFlux\n  *  org.springframework.boot:spring-boot-actuator is on the classpath\n",
                "markdown": "> In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable when all of the following are true:\n\n  *  the application uses Spring MVC or Spring WebFlux\n  *  org.springframework.boot:spring-boot-actuator is on the classpath\n\n|                |                                                      |\n|----------------|------------------------------------------------------|\n| Package        | pkg:maven/org.springframework.boot/spring-boot@3.1.4 |\n| Affected range | >=3.1.0,<3.1.6                                       |\n| Fixed version  | 3.1.6                                                |\n| CVSS Score     |                                                  5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L         |\n"
              },
              "properties": {
                "affected_version": ">=3.1.0,<3.1.6",
                "cvssV3": 5.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "3.1.6",
                "purls": [
                  "pkg:maven/org.springframework.boot/spring-boot@3.1.4"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-6378",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-6378"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-6378",
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of logback version 1.4.11 allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\n\n",
                "markdown": "> A serialization vulnerability in logback receiver component part of logback version 1.4.11 allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\n\n\n|                |                                                 |\n|----------------|-------------------------------------------------|\n| Package        | pkg:maven/ch.qos.logback/logback-classic@1.4.11 |\n| Affected range | >=1.4.0,<1.4.12                                 |\n| Fixed version  | 1.4.12                                          |\n| CVSS Score     |                                             7.1 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H    |\n"
              },
              "properties": {
                "affected_version": ">=1.4.0,<1.4.12",
                "cvssV3": 7.1,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
                "fixed_version": "1.4.12",
                "purls": [
                  "pkg:maven/ch.qos.logback/logback-classic@1.4.11",
                  "pkg:maven/ch.qos.logback/logback-core@1.4.11"
                ],
                "security-severity": "7.1",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-1471",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-1471: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-1471",
              "help": {
                "text": "### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows any type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the target class. A `ConstructorException` is thrown, but only after a malicious payload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\nA fix was released in version 2.0. See https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314 for more information.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**: \n**Date disclosed**: 10/13/2022\n",
                "markdown": "> ### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows any type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the target class. A `ConstructorException` is thrown, but only after a malicious payload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\nA fix was released in version 2.0. See https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314 for more information.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**: \n**Date disclosed**: 10/13/2022\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:maven/org.yaml/snakeyaml@1.33            |\n| Affected range | <=1.33                                       |\n| Fixed version  |                                          2.0 |\n| CVSS Score     |                                          8.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L |\n"
              },
              "properties": {
                "affected_version": "<=1.33",
                "cvssV3": 8.3,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L",
                "fixed_version": "2.0",
                "purls": [
                  "pkg:maven/org.yaml/snakeyaml@1.33"
                ],
                "security-severity": "8.3",
                "tags": [
                  "HIGH"
                ]
              }
            }
          ],
          "version": "1.2.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-34053",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : CVE-2023-34053                                      \n  Severity       : MEDIUM                                              \n  Package        : pkg:maven/org.springframework/spring-webmvc@6.0.12  \n  Affected range : >=6.0.0,<6.0.14                                     \n  Fixed version  : 6.0.14                                              \n  CVSS Score     : 5.3                                                 \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L        \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/shop-1.0-SNAPSHOT.jar:BOOT-INF/lib/spring-webmvc-6.0.12.jar"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-34055",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : CVE-2023-34055                                        \n  Severity       : MEDIUM                                                \n  Package        : pkg:maven/org.springframework.boot/spring-boot@3.1.4  \n  Affected range : >=3.1.0,<3.1.6                                        \n  Fixed version  : 3.1.6                                                 \n  CVSS Score     : 5.3                                                   \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L          \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/shop-1.0-SNAPSHOT.jar:BOOT-INF/lib/spring-boot-3.1.4.jar"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2023-6378                                 \n  Severity       : HIGH                                          \n  Package        : pkg:maven/ch.qos.logback/logback-core@1.4.11  \n  Affected range : >=1.4.0,<1.4.12                               \n  Fixed version  : 1.4.12                                        \n  CVSS Score     : 7.1                                           \n  CVSS Vector    : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/shop-1.0-SNAPSHOT.jar:BOOT-INF/lib/logback-core-1.4.11.jar"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2023-6378                                    \n  Severity       : HIGH                                             \n  Package        : pkg:maven/ch.qos.logback/logback-classic@1.4.11  \n  Affected range : >=1.4.0,<1.4.12                                  \n  Fixed version  : 1.4.12                                           \n  CVSS Score     : 7.1                                              \n  CVSS Vector    : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H     \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/shop-1.0-SNAPSHOT.jar:BOOT-INF/lib/logback-classic-1.4.11.jar"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1471",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2022-1471                                 \n  Severity       : HIGH                                          \n  Package        : pkg:maven/org.yaml/snakeyaml@1.33             \n  Affected range : <=1.33                                        \n  Fixed version  : 2.0                                           \n  CVSS Score     : 8.3                                           \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/shop-1.0-SNAPSHOT.jar:BOOT-INF/lib/snakeyaml-1.33.jar"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
